# Build stage
FROM node:20-alpine AS builder

# Install pnpm
RUN npm install -g pnpm

# Set the working directory
WORKDIR /app

# Copy only necessary package files
COPY e-commerce-front-master/package.json e-commerce-front-master/pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy Angular configuration and source files
COPY e-commerce-front-master/angular.json e-commerce-front-master/tsconfig.json e-commerce-front-master/tsconfig.app.json ./
COPY e-commerce-front-master/src ./src

# Build the Angular application (specific project if in a monorepo)
RUN pnpm run build -- --configuration production

# Production stage (using nginx to serve the frontend)
FROM nginx:alpine

# Copy built assets from the builder stage
COPY --from=builder /app/dist/e-commerce-front /usr/share/nginx/html

# Copy custom nginx configuration (optional, create if needed)
COPY e-commerce-front-master/nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]